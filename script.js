//************************************* Fun√ß√µes que ser√£o repetidas ao longo do jogo *************************************

let pontosHabilidade = 0
let time1 = sortearDraft()

// Fun√ß√£o para definir a vari√°vel pontos de habilidade
function definirPontos(pontos) {
    pontosHabilidade = pontos
}

  // Fun√ß√£o para rolar um dado (1 a 20)
  function rolarDado() {
    return Math.floor(Math.random() * 20) + 1;
  }

  // Fun√ß√£o para jogo de treinamento
  function treino(){
    let energiaJogador = 5;
    let energiaInimigo = 3;
    alert('Vamos treinar 1 contra 1, voc√™ tem a vantagem, vamos nessa!')
    while (energiaJogador > 0 && energiaInimigo > 0) {
        alert(`Sua energia √© ${energiaJogador} e a energia do seu oponente √© ${energiaInimigo}. Role os dados!`);
        let numeroSorteadoJogador = rolarDado();
        alert(`Voc√™ tirou ${numeroSorteadoJogador}! Agora √© a vez do seu oponente!`);
        let numeroSorteadoInimigo = rolarDado();

        if (numeroSorteadoJogador > numeroSorteadoInimigo) {
            energiaInimigo -= 1
            alert(`O oponente tirou ${numeroSorteadoInimigo}. Voc√™ acertou uma cesta! A energia dele agora √© ${energiaInimigo}`);
        } else if (numeroSorteadoJogador < numeroSorteadoInimigo) {
            energiaJogador -= 1;
            alert(`O oponente tirou ${numeroSorteadoInimigo} e fez uma cesta! Sua energia agora √© ${energiaJogador}`);
        } else {
            alert("Empate! Ningu√©m marcou pontos.");
        }
    }

    if (energiaJogador <= 0) {
        alert("Voc√™ perdeu a partida! O treino acabou.");
    } else {
        alert("Voc√™ venceu a partida! A hist√≥ria continua....");
    }
}

// Fun√ß√£o para jogo da final da NBA
function jogoNbaFinal() {
    const time2 = sortearDraft()
    let pontosTime1 = 0;
    let pontosTime2 = 0;
    const pontosParaVencer = 20;
    alert(`Hoje √© o dia que todos esperavam: a grande final da NBA, onde os gigantes do basquete se enfrentam sob os holofotes!`)
    alert(`Com cada drible e arremesso, o destino de campe√µes e desafortunados ser√° decidido, e a emo√ß√£o est√° no ar enquanto a torcida vibra, pronta para viver momentos inesquec√≠veis!`)
    alert(`Bem-vindo √† Final da NBA!! ${time1} contra ${time2}. Quem ser√° o campe√£o???`);
    while (pontosTime1 < pontosParaVencer && pontosTime2 < pontosParaVencer) {
        alert(`Placar: ${time1}: ${pontosTime1} | ${time2}: ${pontosTime2}. Role os dados!`);
        let numeroSorteadoTime1 = rolarDado();
        alert(`Voc√™s tiraram ${numeroSorteadoTime1}! Agora √© a vez deles!`);
        let numeroSorteadoTime2 = rolarDado();
        alert(`Eles tiraram ${numeroSorteadoTime2}!`);

        if (numeroSorteadoTime1 > numeroSorteadoTime2) {
            pontosTime1 += 2
            alert(`${time1} marcou uma cesta! Placar: ${pontosTime1}.`);
        } else if (numeroSorteadoTime1 < numeroSorteadoTime2) {
            pontosTime2 += 2
            alert(`${time2} marcou uma cesta! Placar: ${pontosTime2}.`);
        } else {
            alert("Empate! Nenhum time marcou pontos nesta rodada.");
        }
    }
    if (pontosTime1 >= pontosParaVencer) {
        alert("Voc√™s venceram a partida!!! Parab√©ns, voc√™s s√£o os campe√µes da NBA!!! ü•á");
    } else {
        alert("Os oponentes venceram!üòî Voc√™s tentaram o seu m√°ximo, mas infelizmente n√£o conseguiram! ü•à");
    }
}

   //************************************* Fun√ß√£o para avaliar a a√ß√£o do jogador em uma partida *************************************

   function acaoJogador() {
    const opcao = prompt(`Escolha uma a√ß√£o: 
1 - Cesta de 3 pontos üèπ
2 - Enterrada üí™
3 - Passe üèÄ
4 - Drible üñê`);
    let resultado;
    switch (opcao) {
        case '1':
            if (pontosHabilidade >= 50) {
                resultado = `Voc√™ acertou a cesta de 3 pontos!! Torcida comemorou! üèπüî• 
                (+5 pontos de habilidade)`;
                pontosHabilidade+=5
            } else {
                resultado = `Voc√™ falhou na cesta de 3 pontos. 
Pelo visto voc√™ n√£o tem habilidade suficiente.`;
            }
            break;
        case '2':
            if (pontosHabilidade >= 30) {
                resultado = `Voc√™ acertou a enterrada!! A torcida foi a loucura! üí™üî• 
                (+5 pontos de habilidade)`;
                pontosHabilidade+=5
            } else {
                resultado = `Voc√™ falhou na enterrada. 
Pelo visto voc√™ n√£o tem habilidade suficiente.`;
            }
            break;
        case '3':
            if (pontosHabilidade >= 10) {
                resultado = `Voc√™ acertou o passe e fez uma assist√™ncia!! üèÄüî• 
                (+5 pontos de habilidade)`;
                pontosHabilidade+=5
            } else {
                resultado = `Voc√™ falhou no passe. 
Pelo visto voc√™ n√£o tem habilidade suficiente.`;
            }
            break;
        case '4':
            if (pontosHabilidade >= 20) {
                resultado = `Voc√™ acertou o drible!! Seu t√©cnico se surpreendeu! üñêüî• 
                (+5 pontos de habilidade)`;
                pontosHabilidade+=5
            } else {
                resultado = `Voc√™ falhou no drible. 
Pelo visto voc√™ n√£o tem habilidade suficiente.`;
            }
            break;
        default:
            resultado = "Op√ß√£o inv√°lida!";
    }
    alert(resultado);
}

function acaoJogador2() {
    const opcao = prompt(`Escolha uma a√ß√£o: 
1 - Arremessar de 3 pontos üèπ
2 - Cortar e driblar pro garraf√£o üñê
3 - Passar para o piv√¥ üèÄ`);
    let resultado;
    switch (opcao) {
        case '1':
            resultado = 'Voc√™ tentou arremessar marcado mas tomou um toco humilhante. ü§ï'
            break;
        case '2':
            if (pontosHabilidade >= 30) {
                resultado = `Voc√™ acertou o corte e fez uma √≥tima bandeija!! üñêüî•
                (+5 pontos de habilidade)`;
                pontosHabilidade+=5
            } else {
                resultado = `Voc√™ falhou no corte e o time oponente acertou um contra-ataque. 
Pelo visto voc√™ n√£o tem habilidade suficiente.`;
            }
            break;
        case '3':
            resultado = `Voc√™ fez um passe quicado para o seu piv√¥ e ele acertou um gancho!! √ìtima assist√™ncia! üèÄüî• 
            (+5 pontos de habilidade)`;
            pontosHabilidade+=5
            break;
        default:
            resultado = "Op√ß√£o inv√°lida!";
    }
    alert(resultado);
}

function acaoJogador3() {
    const opcao = prompt(`Escolha uma a√ß√£o: 
1 - Arremessar do meio da quadra üèπ
2 - Segurar a bola at√© acabar a partida üñê
3 - Passar para o ala avan√ßado üèÄ`);
    let resultado;
    switch (opcao) {
        case '1':
            if (pontosHabilidade >= 55) {
                resultado = `Com um toque de m√°gica e a press√£o do tempo, ele arremessa de longe e a bola voa em arco perfeito, caindo na rede como se o destino estivesse ao seu favor! üî•üî•üî•`;
                pontosHabilidade+=5
            } else {
                resultado = `Na √∫ltima tentativa, ele se prepara para a cesta, mas a press√£o √© demais. A bola se despede do aro, e com isso, a vit√≥ria escorrega pelas m√£os do time, deixando a torcida em sil√™ncio e o advers√°rio em √™xtase.`;
            }
            break;
        case '2':
            resultado = `Voc√™ tenta segurar a bola e ganhar de 1 ponto de diferen√ßa, mas o seu marcador consegue roubar a bola e marcar uma bandeija para virar a partida faltando 5 segundo para acabar! `
            break;
        case '3':
            resultado = `Voc√™ passa o ala que estava a frente, ele recebe o passe e consegue fazer uma bandeija milagrosa! Aumenta a diferen√ßa e voc√™s ganham a partida!! üôå`;
            break;
        default:
            resultado = "Op√ß√£o inv√°lida!";
    }
    alert(resultado);
}

//************************************* Fun√ß√£o que roda ao iniciar o jogo *************************************

function iniciar() {
    const personagem = prompt(`Seja bem-vindo ao Carreira NBA! Escolha uma das op√ß√µes: 
        1 - Come√ßar a Carreira
        2 - Sair do Jogo`);

    switch (personagem) {
        case "1":
            const timeCollege = sortearHighSchool();
            const altura = sortearAltura();
            alert(`Voc√™ joga pelo col√©gio ${timeCollege}!! Voc√™ tem ${altura}m de altura! 
Vamos come√ßar...`);
            if (["Duke", "UConn", "Purdue", "Alabama"].includes(timeCollege)) {
                iniciarJornadaEstrela();
            } else {
                iniciarJornadaAtleta();
            }
            break;
        case "2":
            alert("Espero te ver novamente!");
            break;
        default:
            alert("Isso n√£o √© uma op√ß√£o! Recome√ßo do zero cabe√ßudo!");
    }
}


//************************************* Fun√ß√£o para sortear o time do colegial *************************************
function sortearHighSchool() {
    const college = ["UConn","Purdue","Duke","North Carolina","South Carolina","Houston",
        "Alabama","Tennessee","Kentucky","Illinois","San Diego State","San Diego State",
        "Arizona","Michigan State","Baylor"];
  
    const sorteado = Math.floor(Math.random() * college.length);
    return college[sorteado];
  }

//************************************* Fun√ß√£o para sortear a altura do jogador *************************************

  function sortearAltura() {
    const alturas = ["1,75", "1,76", "1,77", "1,78", "1,79", "1,80", 
    "1,81", "1,82", "1,83", "1,84", "1,85", "1,86", "1,87", "1,88", "1,89", 
    "1,90", "1,91", "1,92", "1,93", "1,94", "1,95", "1,96", "1,97", "1,98", "1,99", 
    "2,00", "2,01", "2,02", "2,03", "2,04", "2,05", "2,06", "2,07", "2,08", "2,09", 
    "2,10", "2,11", "2,12", "2,13", "2,14", "2,15"];
  
    const sorteado = Math.floor(Math.random() * alturas.length);
    return alturas[sorteado];
  }


//************************************* Fun√ß√µes para jornada de cada personagem *************************************

// Fun√ß√£o para iniciar a jornada do atleta
function iniciarJornadaAtleta(){
    const opcao1 = prompt(`Voc√™ est√° no col√©gio, oque voc√™ faz?
        1 - Treinar üèÄ
        2 - Estudar t√©cnicas üß†
        3 - Dormir üò™`)
    if(opcao1 == "1"){
        treino()
        pontosHabilidade+=20
        const opcao2 = prompt(`Voc√™ treinou e ficou com ${pontosHabilidade} pontos de habilidade, 
voc√™ tem tempo para fazer mais uma coisa, oque voc√™ faz?
        1 - Estudar t√©cnicas üß†
        2 - Dormir üò™`)
        if(opcao2 == "1"){
            pontosHabilidade+=20
            alert(`Voc√™ teve aulas sobre t√©cnicas com o treinador. 
Habilidade: ${pontosHabilidade}`)
        }
        else if(opcao2 == "2"){
            pontosHabilidade+=5
            alert(`Voc√™ dormiu at√© o final do intervalo! 
Habilidade: ${pontosHabilidade}`)
        }
    }
    else if(opcao1 == "2"){
        alert('Voc√™ teve aulas sobre t√©cnicas com o treinador.')
        pontosHabilidade+=20
        const opcao2 = prompt(`Voc√™ estudou e ficou com ${pontosHabilidade} pontos de habilidade, 
voc√™ tem tempo para fazer mais uma coisa, oque voc√™ faz?
        1 - Treinar üèÄ
        2 - Dormir üò™`)
        if(opcao2 == "1"){
            treino()
            pontosHabilidade+=20
            alert(`Voc√™ treinou e ficou com ${pontosHabilidade} pontos de habilidade.`)
        }
        else if(opcao2 == "2"){
            pontosHabilidade+=5
            alert(`Voc√™ dormiu, o t√©cnico ficou um pouco bravo! 
Habilidade: ${pontosHabilidade}`)
        }
    }
    else if(opcao1 == "3"){
        pontosHabilidade+=10
        alert(`Voc√™ dormiu o intervalo inteiro, o t√©cnico ficou nervoso! 
Habilidade: ${pontosHabilidade}`)
    }
    alert("Come√ßou o Draft da NBA üí™! Veja se voc√™ ser√° Draftado!")    
    alert(`Voc√™ foi Draftado pelo ${time1} na ${sortearAtleta()} posi√ß√£o! 
Parab√©ns! üéâüéâ`)
    estreiaNba()
}

// Fun√ß√£o para iniciar a jornada de uma estrela da NBA
function iniciarJornadaEstrela(){
    const opcao1 = prompt(`Voc√™ est√° no col√©gio, oque voc√™ faz?
        1 - Treinar üèÄ
        2 - Estudar t√©cnicas üß†
        3 - Dormir üò™`)
        if(opcao1 == "1"){
            treino()
            pontosHabilidade+=30
            const opcao2 = prompt(`Voc√™ treinou e ficou com ${pontosHabilidade} pontos de habilidade, 
voc√™ tem tempo para fazer mais uma coisa, oque voc√™ faz?
            1 - Estudar t√©cnicas üß†
            2 - Dormir üò™`)
            if(opcao2 == "1"){
                pontosHabilidade+=20
                alert(`Voc√™ teve aulas sobre t√©cnicas com o treinador. 
Habilidade: ${pontosHabilidade}`)
            }
            else if(opcao2 == "2"){
                pontosHabilidade+=10
                alert(`Voc√™ dormiu at√© o final do intervalo! 
Habilidade: ${pontosHabilidade}`)
            }
        }
        else if(opcao1 == "2"){
            alert('Voc√™ teve aulas sobre t√©cnicas com o treinador.')
            pontosHabilidade+=20
            const opcao2 = prompt(`Voc√™ estudou e ficou com ${pontosHabilidade} pontos de habilidade, 
voc√™ tem tempo para fazer mais uma coisa, oque voc√™ faz?
            1 - Treinar üèÄ
            2 - Dormir üò™`)
            if(opcao2 == "1"){
                treino()
                pontosHabilidade+=30
                alert(`Voc√™ treinou e ficou com ${pontosHabilidade} pontos de habilidade`)
            }
            else if(opcao2 == "2"){
                pontosHabilidade+=10
                alert(`Voc√™ dormiu, o t√©cnico ficou um pouco bravo!
Habilidade: ${pontosHabilidade}`)
            }
        }
        else if(opcao1 == "3"){
            pontosHabilidade+=20
            alert(`Voc√™ dormiu o intervalo inteiro, o t√©cnico ficou nervoso!
Habilidade: ${pontosHabilidade}`)
        }
    alert("Come√ßou o Draft da NBA üí™! Veja a coloca√ß√£o em que voc√™ ser√° selecionado!")    
    alert(`Voc√™ foi Draftado pelo ${time1} na ${sortearEstrela()} posi√ß√£o!!! 
Grande promessa üî•üî•`)
    estreiaNba()
}

//************************************* Fun√ß√£o para sortear o time no draft *************************************

function sortearDraft() {
    const times = [
        "Atlanta Hawks ü¶Ö",
        "Boston Celtics üçÄü§Æ",
        "Brooklyn Nets üåá",
        "Charlotte Hornets üêù",
        "Chicago Bulls üêÇ",
        "Cleveland Cavaliers üèπ",
        "Dallas Mavericks üê¥",
        "Denver Nuggets üóª",
        "Detroit Pistons üî©",
        "Golden State Warriors üåâ",
        "Houston Rockets üöÄ",
        "Indiana Pacers ü¶µ",
        "Los Angeles Clippers üìé",
        "Los Angeles Lakers üåä",
        "Memphis Grizzlies üêª",
        "Miami Heat üî•",
        "Milwaukee Bucks ü¶å",
        "Minnesota Timberwolves üê∫",
        "New Orleans Pelicans ü¶¢",
        "New York Knicks üóΩ",
        "Oklahoma City Thunder ‚ö°",
        "Orlando Magic üå†",
        "Philadelphia 76ers ‚≠ê",
        "Phoenix Suns üåû",
        "Portland Trail Blazers üõë",
        "Sacramento Kings üëë",
        "San Antonio Spurs üë§",
        "Toronto Raptors ü¶ñ",
        "Utah Jazz üé∑",
        "Washington Wizards üßô"
    ];
    const sorteado = Math.floor(Math.random() * times.length);
    const timeSorteado = times[sorteado]
    times.splice(sorteado, 1);

    return timeSorteado;
  }

  //************************************* Fun√ß√£o para sortear a posi√ß√£o das estrelas no draft *************************************

function sortearEstrela() {
    const posi√ß√£oEstrela = ["1¬∫","2¬∫","3¬∫","4¬∫","5¬∫","6¬∫","7¬∫","8¬∫","9¬∫","10¬∫"];
  
    const sorteado1 = Math.floor(Math.random() * posi√ß√£oEstrela.length);
    return posi√ß√£oEstrela[sorteado1];
  }

 //************************************* Fun√ß√£o para sortear a posi√ß√£o dos atletas no draft *************************************

function sortearAtleta() {
    const posi√ß√£oAtleta = ["20¬∫", "21¬∫", "22¬∫", "23¬∫", "24¬∫", "25¬∫", "26¬∫", 
    "27¬∫", "28¬∫", "29¬∫", "30¬∫", "31¬∫", "32¬∫", "33¬∫", "34¬∫", "35¬∫", "36¬∫", 
    "37¬∫", "38¬∫", "39¬∫", "40¬∫", "41¬∫", "42¬∫", "43¬∫", "44¬∫", "45¬∫", "46¬∫",
    "47¬∫", "48¬∫", "49¬∫", "50¬∫", "51¬∫", "52¬∫", "53¬∫", "54¬∫", "55¬∫", "56¬∫",
    "57¬∫", "58¬∫", "59¬∫", "60¬∫"];
  
    const sorteado2 = Math.floor(Math.random() * posi√ß√£oAtleta.length);
    return posi√ß√£oAtleta[sorteado2];
  }
//************************************* Fun√ß√£o para os jogos na NBA *************************************

function estreiaNba(){
    const inicioNba = prompt('Essa √© sua estreia na NBA!! Est√° preparado?? (S ou N)')
    const time2 = sortearDraft()
    if (inicioNba === "S"){
        alert(`${time1} x ${time2}`)
        alert(`Seu primeiro jogo vai ser contra o ${time2}! Voc√™ entrou no inicio do segundo quarto e voc√™ recebe a bola...`)
        acaoJogador()
        alert('5 minutos do terceiro quarto, voc√™ recebe a bola na linha de 3 mas voc√™ est√° sendo marcado...')
        acaoJogador2()
        alert('√öltimos 20 segundos de jogo! Voc√™ pegou o rebote defensivo, seu time est√° ganhando de 1 ponto...')
        acaoJogador3()
        const fimDaPartida = prompt('Acabou a partida! Voc√™ deseja continuar?? (S ou N)')
            if(fimDaPartida === 'S'){
                jogoNbaFinal()
            }
            else if(fimDaPartida === 'N'){
                alert('Voc√™ n√£o quis continuar jogando! Seu time n√£o conseguiu se classificar para a Semi-Final!')
                jornada()
            }
            else {
                alert('Digite uma op√ß√£o v√°lida!')
            }
    } else if(inicioNba === 'N') {
        alert('Voc√™ teve um mau in√≠cio de carreira! Seu time perdeu e n√£o classificou para os Playoffs!')
        jornada()
    } else{
        alert('Digite uma op√ß√£o v√°lida')
        estreiaNba()
    }
  }

  //************************************* Fun√ß√£o para jornada caso o jogador n√£o se classificou *************************************

function jornada(){
    alert(`Come√ßou uma nova temporada da NBA! Primeira partida ser√° contra o ${sortearDraft()}!`)
    alert('Voc√™ come√ßou como titular, 5 minutos do primeiro quarto, voc√™ recebe a bola na linha de 3 mas voc√™ est√° sendo marcado...')
    acaoJogador2()
    alert('Voc√™ recebe a bola livre...')
    acaoJogador()
    alert('Segundo Quarto, voc√™ recebe a bola na linha de 3 sendo marcado...')
    acaoJogador2()
    alert('Terceiro quarto, voc√™ recebe a bola livre na linha de 3...')
    acaoJogador()
    const fimDaPartida = prompt('A partida terminou! Voc√™ deseja continuar?? (S ou N)')
        if(fimDaPartida === 'S'){
            jogoNbaFinal()
        }
        else if(fimDaPartida === 'N'){
             alert('Voc√™ n√£o quis continuar jogando! Seu time n√£o conseguiu se classificar para os Playoffs!')
             jornada()
         }
         else {
             alert('Digite uma op√ß√£o v√°lida!')
         }
}